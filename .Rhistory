ggplot(aes(x = pp_total_raw, y = value)) +
geom_point(alpha=0.3,color = defaultcolor)+
facet_wrap(~name, labeller=labeller(name=fl))+
geom_smooth(color = defaultcolor)+
labs(x = "Per Pupil Funding", y = "Normalized Metric", title = "Metric Performance by Total Per-Pupil Funding") +
theme_minimal() +
theme(
legend.title = element_blank(),
legend.text = element_text(size = 8),
legend.position = "none") +
scale_x_continuous(limits = c(8000,20000))
ca_counties <- read_sf('CA_Counties')
ca_counties <- ca_counties %>%
st_transform(crs = "NAD83")
school_map <- merged_table %>%
select(CDSCode, School, gradecenter, gcs_mn_avg_ol, Longitude, Latitude) %>%
filter(!is.na(gradecenter) & !is.na(gcs_mn_avg_ol)) %>% #7390 after NA gradecenter, 6997 after both conditions
distinct %>%
mutate(diff_from_gradecenter = gcs_mn_avg_ol - gradecenter) %>%
mutate(gcs_type = ifelse(diff_from_gradecenter < 0, "Below NAEP Average", ifelse(diff_from_gradecenter > 0, "Above NAEP Average", "At NAEP Average")))
school_map_sf <- school_map %>%
st_as_sf(coords = c('Longitude', 'Latitude'), crs = "NAD83")
school_county_sf <- st_join(school_map_sf, ca_counties)
grade_diff_by_county <- school_county_sf %>%
st_drop_geometry() %>% #removes geometry - makes calculation more efficient
group_by(NAMELSAD) %>%
summarise(mean_gcs_diff = mean(diff_from_gradecenter))
grade_diff_by_county_geo <- ca_counties %>%
left_join(grade_diff_by_county, by="NAMELSAD")
grade_diff_by_county_with_breaks_geo <- grade_diff_by_county_geo %>%
mutate(grade_diff_cat = factor(cut(mean_gcs_diff, breaks=c(-2, -1, 0, 1, 2))))
pal <- colorFactor(
palette = met.brewer(palname,3)[1:3],
domain = grade_diff_by_county_with_breaks_geo$grade_diff_cat
)
leaflet(grade_diff_by_county_with_breaks_geo) %>%
addPolygons(
fillColor = ~pal(grade_diff_cat),
opacity = .25,
color = "white",
fillOpacity = .5,
group = "County"
)  %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addLayersControl(
baseGroups = "County",
position = "topright"
) %>%
addLegend(colors = met.brewer(palname,3)[1:3], values = ~grade_diff_cat, title = NULL, labels = c('1-2 years behind', 'Less than 1 year behind', 'Less than 1 year ahead'), className = "info legend County")
mapdata <- wide_merged_data %>% filter(!is.na(gradecenter)&!is.na(gcs_mn_avg_ol)) %>%
mutate(diff_from_gradecenter = gcs_mn_avg_ol - gradecenter, pp_total_raw = as.numeric(pp_total_raw)) %>%
mutate(Longitude = as.numeric(Longitude), Latitude = as.numeric(Latitude)) %>%
mutate(pp_total_raw_cat = cut(pp_total_raw, breaks = c(0,10000,15000,20000,Inf))) %>%
mutate(diff_from_gradecenter_cat = cut(diff_from_gradecenter, breaks = c(-Inf, -3, -1, 1, 3, Inf)))
p1 <- colorFactor(
palette = met.brewer(palname, 5)[1:5],
domain = mapdata$diff_from_gradecenter_cat
)
pal <- colorFactor(
palette = met.brewer(palname, 4)[1:4],
domain = mapdata$pp_total_raw_cat
)
leaflet(mapdata) %>% addProviderTiles(providers$CartoDB.Positron) %>%
addCircleMarkers(
color = ~p1(diff_from_gradecenter_cat),
radius = ~(as.numeric(ncesenroll)/400),
popup = ~paste0(School,
"<br>Grade Distance from National Average: ", round(diff_from_gradecenter, digits = 3),
"<br>Per Pupil Funding: ", pp_total_raw,
"<br>Enrollment: ", ncesenroll
),
group = "Performance"
) %>%
addLegend(position = "bottomright", colors = met.brewer(palname, 5)[1:5], title = "Performance", labels = c("3+ years behind", "1-3 years behind",  "Within 1 year of national average",  "1-3 years ahead", "3+ years ahead"))
leaflet(mapdata) %>% addProviderTiles(providers$CartoDB.Positron) %>%
addCircleMarkers(
color = ~pal(pp_total_raw_cat),
radius = ~(as.numeric(ncesenroll)/400),
popup = ~paste0(School,
"<br>Grade Distance from National Average: ", round(diff_from_gradecenter, digits = 3),
"<br>Per Pupil Funding: ", pp_total_raw,
"<br>Enrollment: ", ncesenroll
),
stroke = ~ifelse(!is.na(pp_total_raw_cat), TRUE, FALSE),
group = "Funding"
) %>%
addLegend("bottomright", colors = met.brewer(palname, 4)[1:4], title = "Per Student Funding", labels = c("$10,000 or less", "$10,000 to $15,000", "15,000 to 20,000", "Greater than 20,000"))
wide_merged_data %>% filter(!is.na(urbanicity)) %>%
ggplot(aes(x=as.numeric(pp_total_raw), y=(as.numeric(gcs_mn_avg_ol)-as.numeric(gradecenter)))) +
geom_point(alpha = .1, color=defaultcolor) +
geom_smooth(method = lm, color=defaultcolor) +
facet_wrap(~urbanicity) +
scale_x_continuous(limits = c(8000,18000)) +
theme_minimal()+
labs(y="Grade Cohort Score", x= "Per Student Spending") + guides(color="none") +   geom_hline(yintercept = 0)
math_ca_gcs_df <- read_csv("AllDatasets/math_ca_gcs_df.csv")
rla_ca_gcs_df <- read_csv("AllDatasets/rla_ca_gcs_df.csv")
#| message: true
fundingmod<-wide_merged_data %>%
filter(!is.na(pp_total_raw)&!is.na(perfrl)) %>%
lm(formula = as.numeric(pp_total_raw) ~ as.numeric(perfrl) +
as.numeric(lep_flag) +
as.numeric(perfrl)*as.numeric(lep_flag)) %>%
summary()
lunchfundingmod<-wide_merged_data %>%
filter(!is.na(pp_total_raw)&!is.na(perfrl)) %>%
lm(formula = as.numeric(pp_total_raw) ~ as.numeric(perfrl)) %>%
summary()
# fundingmod$coefficients
lunchfundingmod$coefficients
fl<-c("Adjusted Spending","Raw Spending")
wide_merged_data %>%
mutate(pp_total_raw_frl_adjusted = as.numeric(pp_total_raw) - as.numeric(perfrl)*lunchfundingmod$coefficients[2],
pp_total_raw = as.numeric(pp_total_raw)) %>%
pivot_longer(cols = c(pp_total_raw_frl_adjusted,pp_total_raw)) %>%
ggplot(aes(x=value, y=gcs_mn_avg_ol-gradecenter, color = name)) +
geom_point(alpha = .1)+
geom_smooth() +
geom_hline(yintercept = 0, alpha=.5) +
scale_x_continuous(limits = c(8000,18000)) +
scale_y_continuous(limits = c(-4, 4)) +
scale_color_discrete(type = met.brewer(palname, 3)[2:3], labels = c("Raw Spending", "Adjusted Spending")) +
labs(x = "Per Student Funding", y = "Grade Cohort Score", color="") +
theme_minimal() +
theme(legend.position = c(.8,.81))
wide_merged_data %>%
mutate(pp_total_raw_frl_adjusted = as.numeric(pp_total_raw) - as.numeric(perfrl)*lunchfundingmod$coefficients[2],
pp_total_raw = as.numeric(pp_total_raw)) %>%
pivot_longer(cols = c(pp_total_raw_frl_adjusted,pp_total_raw)) %>%
ggplot(aes(x=as.numeric(perhsp),value,color=name)) +
geom_point(alpha = .05) +
geom_smooth() +
theme_minimal()+
theme(legend.position = c(.2,.9) ) +
labs(x="Percent Hispanic", y="Per student funding", color="")+
scale_y_continuous(limits = c(5000,20000)) +
scale_color_discrete(type = met.brewer(palname, 3)[2:3], labels = c("Raw Spending", "Adjusted Spending"))
wide_merged_data %>% filter(!is.na(urbanicity)) %>% mutate(pp_total_raw_frl_adjusted = as.numeric(pp_total_raw) - as.numeric(perfrl)*lunchfundingmod$coefficients[2],
pp_total_raw = as.numeric(pp_total_raw)) %>%
ggplot(aes(x=as.numeric(pp_total_raw_frl_adjusted), y=(as.numeric(gcs_mn_avg_ol)-as.numeric(gradecenter)))) +
geom_point(alpha = .1, color=defaultcolor) +
geom_smooth(method = lm, color=defaultcolor) +
facet_wrap(~urbanicity) +
scale_x_continuous(limits = c(8000,18000)) +
theme_minimal()+
labs(y="Grade Cohort Score", x= "Adjusted Per Student Spending") + guides(color="none") +   geom_hline(yintercept = 0)
summary_math_data <- ca_counties %>%
left_join(math_ca_gcs_df, by=c("NAMELSAD" = "sedacountyname")) %>%
filter(student_category %in% c('ecd','nec')) %>%
filter(!is.na(gcs_value) & !is.na(student_category)) %>%
select(NAMELSAD, grade, year, gcs_value, student_category, clean_student_category) %>%
mutate(gcs_diff = gcs_value - grade) %>%
st_drop_geometry() %>%
group_by(NAMELSAD, student_category, clean_student_category) %>%
summarise(mean_gcs_diff = mean(gcs_diff)) %>%
ungroup()
summary_math_data_with_geo <- ca_counties %>%
select(NAMELSAD) %>%
left_join(summary_math_data, by="NAMELSAD")
summary_math_data_with_geo <- summary_math_data_with_geo %>%
mutate(mean_gcs_diff_cat = factor(cut(mean_gcs_diff, breaks=c(-3, -2, -1, 0, 1, 2, 3))))
pal <- colorFactor(
palette = met.brewer(palname,6)[1:6],
domain = summary_math_data$mean_gcs_diff_cat
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addLayersControl(
baseGroups = "County",
position = "topright"
) %>%
addPolygons(
data = summary_math_data_with_geo %>% filter(student_category == 'ecd'),
fillColor = ~pal(mean_gcs_diff_cat),
opacity = .25,
color = "white",
fillOpacity = .5,
group = "Economically Disadvantaged",
popup = ~paste0(NAMELSAD,
"<br>Grade Distance from National Average: ", round(mean_gcs_diff, digits = 3)
)
)  %>%
addPolygons(
data = summary_math_data_with_geo %>% filter(student_category == 'nec'),
fillColor = ~pal(mean_gcs_diff_cat),
opacity = .25,
color = "white",
fillOpacity = .5,
group = "Non-Economically Disadvantaged",
popup = ~paste0(NAMELSAD,
"<br>Grade Distance from National Average: ", round(mean_gcs_diff, digits = 3)
)
)  %>%
addLayersControl(baseGroups = c("Economically Disadvantaged", "Non-Economically Disadvantaged"),
position = "bottomleft", options = layersControlOptions(collapsed = FALSE)) %>%
addLegend(colors = met.brewer(palname,6)[1:6], values = ~mean_gcs_diff_cat, title = NULL, labels = c('2+ years behind','1-2 years behind', 'Less than 1 year behind', 'Less than 1 year ahead', '1-2 years ahead', '2+ years ahead'), group = "Economically Disadvantaged")
fl <- c("English Language Arts", "Grade Cohort Standardized", "Earth + Space", "Life Sciences", "Physical Sciences", "Math Growth Score", "English Language Arts Growth Score")
names(fl) <- c("ela_data_currstatus_ALL", "gcs_mn_avg_ol", "science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99", "science_data_Life.Sciences.Domain.Percent.Above.Standard_99", "science_data_Physical.Sciences.Domain.Percent.Above.Standard_99", "growthscore_ela", "growthscore_math")
multi_metric_data %>%
mutate(ecdcat = cut(perecd, breaks = c(0,.2,.4,.6,.8,1))) %>%
group_by(ecdcat, name) %>%
mutate(medianvalue = median(value[!is.na(value)])) %>%
mutate(medianvaluecat = cut(medianvalue, breaks = c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1))) %>%
filter(!is.na(perecd)) %>%
ggplot(aes(x = cut(perecd, breaks = c(0,.2,.4,.6,.8,1)), y = value, fill = medianvaluecat)) +
geom_boxplot(alpha = 1) +
facet_wrap(~name, labeller=labeller(name=fl)) +
labs(x = "Percent Economically Disadvantaged", y = "Normalized Metric") +
theme_minimal() +
theme(
legend.title = element_blank(),
legend.text = element_text(size = 8),
legend.position = "none") +
scale_fill_manual(values = met.brewer(palname,8)[1:8])
data <- wide_merged_data %>%
mutate(pp_total_raw = as.numeric(pp_total_raw)) %>%
mutate(science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99 = as.numeric(science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99),
science_data_Physical.Sciences.Domain.Percent.Above.Standard_99 = as.numeric(science_data_Physical.Sciences.Domain.Percent.Above.Standard_99),
science_data_Life.Sciences.Domain.Percent.Above.Standard_99 = as.numeric(science_data_Life.Sciences.Domain.Percent.Above.Standard_99),
ela_data_currstatus_ALL = as.numeric(ela_data_currstatus_ALL),
gcs = as.numeric(gcs_mn_avg_ol - gradecenter),
growthscore_ela = as.numeric(growthscore_ela),
growthscore_math = as.numeric(growthscore_math)
) %>% mutate(
science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99 = min_max_norm(science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99),
science_data_Physical.Sciences.Domain.Percent.Above.Standard_99 = min_max_norm(science_data_Physical.Sciences.Domain.Percent.Above.Standard_99),
science_data_Life.Sciences.Domain.Percent.Above.Standard_99 = min_max_norm(science_data_Life.Sciences.Domain.Percent.Above.Standard_99),
ela_data_currstatus_ALL = min_max_norm(ela_data_currstatus_ALL),
gcs = min_max_norm(gcs_mn_avg_ol - gradecenter),
growthscore_ela = min_max_norm(growthscore_ela),
growthscore_math = min_max_norm(growthscore_math)
)
# Lasso Model Spec
lm_lasso_spec <-
linear_reg() %>%
set_args(mixture = 1, penalty = 0) %>%
set_engine(engine = 'glmnet') %>%
set_mode('regression')
outcome <- data %>% select(ela_data_currstatus_ALL, gcs, science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99, science_data_Life.Sciences.Domain.Percent.Above.Standard_99, science_data_Physical.Sciences.Domain.Percent.Above.Standard_99, growthscore_ela, growthscore_math)
predictors <- ((data %>% select(-starts_with("science_data"), -starts_with("ela_data")))[27:151]) %>% select(-census_id,-DATE_CUR,-CATEGORY,-ST_LEAID,-LEANM,-ST_SCHID,-SCHNAM,-GRADE,STNAM,-FIPST,-LEAID,-reported_which,-reportingyear,-studentgroup,-schoolname.y,       -districtname,-countyname,-EILCode,-EILName,-SOC,-DOC,-YearRoundYN,-FederalDFCDistrictID,-Latitude,-Longitude,-AdmFName,-AdmLName,-AdmEmail,-LastUpDate,-school_id,-         schoolname.x,-ncesdistid_admin,-ncesdistid_geo,-distid_stateassigned,-schoolid_stateassigned,-distname,-address,-city,-state,-zip_code,-level.x,-sedasch,-sedaschname         ,-fips,-stateabb,-subcat,-subgroup,-sedalea,-schnam,-schcity,-type,-level.y,-ncesid,-rtype,-SCHOOL_YEAR,-STNAM,-X) %>%
select(-contains("growthscore"), -contains("decilerank"), -starts_with("ELA"), -starts_with("MTH"), -charter_flag, -coe_flag, -dass_flag, -enrollmetric_raw, -gcs_mn_avg_ol, -gcs_mn_avg_eb) %>%
mutate(across(starts_with("pp"), as.numeric)) %>%
mutate(across(ends_with("raw"), as.numeric)) %>%
mutate(ncesenroll = as.numeric(ncesenroll))
#| fig-width: 50
#| fig-height: 10
do_lasso<-function(variable, data) {
processeddata <- cbind(variable, data) %>%
select(where(is.numeric)) %>%
filter(complete.cases(.))
data_rec <- recipe(variable ~ ., data = processeddata) %>%
step_nzv(all_predictors()) %>%
step_novel(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors())
lasso_wf <- workflow() %>%
add_recipe(data_rec) %>%
add_model(lm_lasso_spec)
lasso_fit <- lasso_wf %>%
fit(data = processeddata) # Fit to data
glmnet_output <- lasso_fit %>% extract_fit_parsnip() %>% pluck('fit')
lambdas <- glmnet_output$lambda
coefs_lambdas <-
coefficients(glmnet_output, s = lambdas )  %>%
as.matrix() %>%
t() %>%
as.data.frame() %>%
mutate(lambda = lambdas ) %>%
select(lambda, everything(), -`(Intercept)`) %>%
pivot_longer(cols = -lambda,
names_to = "term",
values_to = "coef") %>%
mutate(var = purrr::map_chr(term,~.[1]))
number <- nrow(processeddata)
name <- deparse(substitute(variable))
middle <- coefs_lambdas$lambda[[floor(length(coefs_lambdas$lambda)*0.2)]]
coefs_lambdas %>%
ggplot(aes(x = lambda, y = coef, group = term, color = var)) +
labs(subtitle = paste0(name,": ",number)) +
geom_line() +
theme_classic() +
theme(legend.position = "right", legend.text=element_text(size=8)) +
geom_label(data = coefs_lambdas %>% filter(lambda == middle, (coef > 0.001) | (coef < -0.001)), aes(x = lambda, y = coef, label = var))
}
A <- wide_merged_data %>% filter(!is.na(urbanicity)) %>% mutate(pp_total_raw_frl_adjusted = as.numeric(pp_total_raw) - as.numeric(perfrl)*lunchfundingmod$coefficients[2],
pp_total_raw = as.numeric(pp_total_raw)) %>%
ggplot(aes(x=as.numeric(pp_total_raw_frl_adjusted), y=(as.numeric(gcs_mn_avg_ol)-as.numeric(gradecenter)))) +
geom_point(alpha = .1, color=defaultcolor) +
geom_smooth(method = lm, color=defaultcolor) +
facet_wrap(~urbanicity) +
scale_x_continuous(limits = c(8000,18000)) +
theme_minimal()+
labs(y="Grade Cohort Score", x= "Adjusted Per Student Spending") + guides(color="none") +   geom_hline(yintercept = 0)
library(tidyverse)
library(MetBrewer)
library(sf)
library(rnaturalearth)
library(classInt) #install.packages('classInt')
library(ggspatial) #install.packages('ggspatial')
library(ggthemes) #install.packages('ggthemes')
library(RColorBrewer)
library(patchwork)
library(leaflet)
library(probably) #install.packages('probably')
library(glmnet)
library(tidymodels)
tidymodels_prefer()
palname = "Homer2"
defaultcolor = met.brewer(palname,10)[9]
load("CombinedDataLongFormat.RData")
load("WideMergedData.RData")
math_ca_gcs_df <- read_csv("AllDatasets/math_ca_gcs_df.csv")
rla_ca_gcs_df <- read_csv("AllDatasets/rla_ca_gcs_df.csv")
ca_counties <- read_sf('CA_Counties')
ca_counties <- ca_counties %>%
st_transform(crs = "NAD83")
mapdata <- wide_merged_data %>% filter(!is.na(gradecenter)&!is.na(gcs_mn_avg_ol)) %>%
mutate(diff_from_gradecenter = gcs_mn_avg_ol - gradecenter, pp_total_raw = as.numeric(pp_total_raw)) %>%
mutate(Longitude = as.numeric(Longitude), Latitude = as.numeric(Latitude)) %>%
mutate(pp_total_raw_cat = cut(pp_total_raw, breaks = c(0,10000,15000,20000,Inf))) %>%
mutate(diff_from_gradecenter_cat = cut(diff_from_gradecenter, breaks = c(-Inf, -3, -1, 1, 3, Inf)))
p1 <- colorFactor(
palette = met.brewer(palname, 5)[1:5],
domain = mapdata$diff_from_gradecenter_cat
)
pal <- colorFactor(
palette = met.brewer(palname, 4)[1:4],
domain = mapdata$pp_total_raw_cat
)
leaflet(mapdata) %>% addProviderTiles(providers$CartoDB.Positron) %>%
addCircleMarkers(
color = ~p1(diff_from_gradecenter_cat),
radius = ~(as.numeric(ncesenroll)/400),
popup = ~paste0(School,
"<br>Grade Distance from National Average: ", round(diff_from_gradecenter, digits = 3),
"<br>Per Pupil Funding: ", pp_total_raw,
"<br>Enrollment: ", ncesenroll
),
group = "Performance"
) %>%
addLegend(position = "bottomright", colors = met.brewer(palname, 5)[1:5], title = "Performance", labels = c("3+ years behind", "1-3 years behind",  "Within 1 year of national average",  "1-3 years ahead", "3+ years ahead"))
leaflet(mapdata) %>% addProviderTiles(providers$CartoDB.Positron) %>%
addCircleMarkers(
color = ~pal(pp_total_raw_cat),
radius = ~(as.numeric(ncesenroll)/400),
popup = ~paste0(School,
"<br>Grade Distance from National Average: ", round(diff_from_gradecenter, digits = 3),
"<br>Per Pupil Funding: ", pp_total_raw,
"<br>Enrollment: ", ncesenroll
),
stroke = ~ifelse(!is.na(pp_total_raw_cat), TRUE, FALSE),
group = "Funding"
) %>%
addLegend("bottomright", colors = met.brewer(palname, 4)[1:4], title = "Per Student Funding", labels = c("$10,000 or less", "$10,000 to $15,000", "15,000 to 20,000", "Greater than 20,000"))
wide_merged_data %>% filter(!is.na(urbanicity)) %>%
ggplot(aes(x=as.numeric(pp_total_raw), y=(as.numeric(gcs_mn_avg_ol)-as.numeric(gradecenter)))) +
geom_point(alpha = .1, color=defaultcolor) +
geom_smooth(method = lm, color=defaultcolor) +
facet_wrap(~urbanicity) +
scale_x_continuous(limits = c(8000,18000)) +
theme_minimal()+
labs(y="Grade Cohort Score", x= "Unadjusted Per Student Spending") + guides(color="none") +   geom_hline(yintercept = 0)
#| message: true
fundingmod<-wide_merged_data %>%
filter(!is.na(pp_total_raw)&!is.na(perfrl)) %>%
lm(formula = as.numeric(pp_total_raw) ~ as.numeric(perfrl) +
as.numeric(lep_flag) +
as.numeric(perfrl)*as.numeric(lep_flag)) %>%
summary()
lunchfundingmod<-wide_merged_data %>%
filter(!is.na(pp_total_raw)&!is.na(perfrl)) %>%
lm(formula = as.numeric(pp_total_raw) ~ as.numeric(perfrl)) %>%
summary()
# fundingmod$coefficients
lunchfundingmod$coefficients
A <- wide_merged_data %>% filter(!is.na(urbanicity)) %>% mutate(pp_total_raw_frl_adjusted = as.numeric(pp_total_raw) - as.numeric(perfrl)*lunchfundingmod$coefficients[2],
pp_total_raw = as.numeric(pp_total_raw)) %>%
ggplot(aes(x=as.numeric(pp_total_raw_frl_adjusted), y=(as.numeric(gcs_mn_avg_ol)-as.numeric(gradecenter)))) +
geom_point(alpha = .1, color=defaultcolor) +
geom_smooth(method = lm, color=defaultcolor) +
facet_wrap(~urbanicity) +
scale_x_continuous(limits = c(8000,18000)) +
theme_minimal()+
labs(y="Grade Cohort Score", x= "Adjusted Per Student Spending") + guides(color="none") +   geom_hline(yintercept = 0)
fl<-c("Adjusted Spending","Raw Spending")
B <- wide_merged_data %>%
mutate(pp_total_raw_frl_adjusted = as.numeric(pp_total_raw) - as.numeric(perfrl)*lunchfundingmod$coefficients[2],
pp_total_raw = as.numeric(pp_total_raw)) %>%
pivot_longer(cols = c(pp_total_raw_frl_adjusted,pp_total_raw)) %>%
ggplot(aes(x=value, y=gcs_mn_avg_ol-gradecenter, color = name)) +
geom_point(alpha = .1)+
geom_smooth() +
geom_hline(yintercept = 0, alpha=.5) +
scale_x_continuous(limits = c(8000,18000)) +
scale_y_continuous(limits = c(-4, 4)) +
scale_color_discrete(type = met.brewer(palname, 3)[2:3], labels = c("Raw Spending", "Adjusted Spending")) +
labs(x = "Per Student Funding", y = "Grade Cohort Score", color="") +
theme_minimal() +
theme(legend.position = c(.8,.81))
A + B
wide_merged_data %>% filter(!is.na(urbanicity)) %>% mutate(pp_total_raw_frl_adjusted = as.numeric(pp_total_raw) - as.numeric(perfrl)*lunchfundingmod$coefficients[2],
pp_total_raw = as.numeric(pp_total_raw)) %>%
ggplot(aes(x=as.numeric(pp_total_raw_frl_adjusted), y=(as.numeric(gcs_mn_avg_ol)-as.numeric(gradecenter)))) +
geom_point(alpha = .1, color=defaultcolor) +
geom_smooth(method = lm, color=defaultcolor) +
facet_wrap(~urbanicity) +
scale_x_continuous(limits = c(8000,18000)) +
theme_minimal()+
labs(y="Grade Cohort Score", x= "Adjusted Per Student Spending") + guides(color="none") +   geom_hline(yintercept = 0)
fl<-c("Adjusted Spending","Raw Spending")
wide_merged_data %>%
mutate(pp_total_raw_frl_adjusted = as.numeric(pp_total_raw) - as.numeric(perfrl)*lunchfundingmod$coefficients[2],
pp_total_raw = as.numeric(pp_total_raw)) %>%
pivot_longer(cols = c(pp_total_raw_frl_adjusted,pp_total_raw)) %>%
ggplot(aes(x=value, y=gcs_mn_avg_ol-gradecenter, color = name)) +
geom_point(alpha = .1)+
geom_smooth() +
geom_hline(yintercept = 0, alpha=.5) +
scale_x_continuous(limits = c(8000,18000)) +
scale_y_continuous(limits = c(-4, 4)) +
scale_color_discrete(type = met.brewer(palname, 3)[2:3], labels = c("Raw Spending", "Adjusted Spending")) +
labs(x = "Per Student Funding", y = "Grade Cohort Score", color="") +
theme_minimal() +
theme(legend.position = c(.8,.81))
wide_merged_data %>%
mutate(pp_total_raw_frl_adjusted = as.numeric(pp_total_raw) - as.numeric(perfrl)*lunchfundingmod$coefficients[2],
pp_total_raw = as.numeric(pp_total_raw)) %>%
pivot_longer(cols = c(pp_total_raw_frl_adjusted,pp_total_raw)) %>%
ggplot(aes(x=as.numeric(perhsp),value,color=name)) +
geom_point(alpha = .05) +
geom_smooth() +
theme_minimal()+
theme(legend.position = c(.2,.9) ) +
labs(x="Percent Hispanic", y="Per student funding", color="")+
scale_y_continuous(limits = c(5000,20000)) +
scale_color_discrete(type = met.brewer(palname, 3)[2:3], labels = c("Raw Spending", "Adjusted Spending"))
quarto::quarto_render()
quarto::quarto_render
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
install.packages("ggrepel")
quarto::quarto_render()
mapdata <- wide_merged_data %>% filter(!is.na(gradecenter)&!is.na(gcs_mn_avg_ol)) %>%
mutate(diff_from_gradecenter = gcs_mn_avg_ol - gradecenter, pp_total_raw = as.numeric(pp_total_raw)) %>%
mutate(Longitude = as.numeric(Longitude), Latitude = as.numeric(Latitude)) %>%
mutate(pp_total_raw_cat = cut(pp_total_raw, breaks = c(0,10000,15000,20000,Inf))) %>%
mutate(diff_from_gradecenter_cat = cut(diff_from_gradecenter, breaks = c(-Inf, -3, -1, 1, 3, Inf)))
library(tidyverse)
library(MetBrewer)
library(sf)
library(rnaturalearth)
library(classInt) #install.packages('classInt')
library(ggspatial) #install.packages('ggspatial')
library(ggthemes) #install.packages('ggthemes')
library(RColorBrewer)
library(patchwork)
library(leaflet)
library(probably) #install.packages('probably')
library(glmnet)
library(tidymodels)
tidymodels_prefer()
palname = "Homer2"
defaultcolor = met.brewer(palname,10)[9]
load("CombinedDataLongFormat.RData")
load("WideMergedData.RData")
math_ca_gcs_df <- read_csv("AllDatasets/math_ca_gcs_df.csv")
rla_ca_gcs_df <- read_csv("AllDatasets/rla_ca_gcs_df.csv")
ca_counties <- read_sf('CA_Counties')
ca_counties <- ca_counties %>%
st_transform(crs = "NAD83")
ca_counties <- read_sf('CA_Counties')
ca_counties <- ca_counties %>%
st_transform(crs = "NAD83")
mapdata <- wide_merged_data %>% filter(!is.na(gradecenter)&!is.na(gcs_mn_avg_ol)) %>%
mutate(diff_from_gradecenter = gcs_mn_avg_ol - gradecenter, pp_total_raw = as.numeric(pp_total_raw)) %>%
mutate(Longitude = as.numeric(Longitude), Latitude = as.numeric(Latitude)) %>%
mutate(pp_total_raw_cat = cut(pp_total_raw, breaks = c(0,10000,15000,20000,Inf))) %>%
mutate(diff_from_gradecenter_cat = cut(diff_from_gradecenter, breaks = c(-Inf, -3, -1, 1, 3, Inf)))
p1 <- colorFactor(
palette = met.brewer(palname, 5)[1:5],
domain = mapdata$diff_from_gradecenter_cat
)
pal <- colorFactor(
palette = met.brewer(palname, 4)[1:4],
domain = mapdata$pp_total_raw_cat
)
leaflet(mapdata) %>% addProviderTiles(providers$CartoDB.Positron) %>%
addCircleMarkers(
color = ~p1(diff_from_gradecenter_cat),
radius = ~(as.numeric(ncesenroll)/400),
popup = ~paste0(School,
"<br>Grade Distance from National Average: ", round(diff_from_gradecenter, digits = 3),
"<br>Per Pupil Funding: ", pp_total_raw,
"<br>Enrollment: ", ncesenroll
),
group = "Performance"
) %>%
addLegend(position = "bottomright", colors = met.brewer(palname, 5)[1:5], title = "Performance", labels = c("3+ years behind", "1-3 years behind",  "Within 1 year of national average",  "1-3 years ahead", "3+ years ahead"))
leaflet(mapdata) %>% addProviderTiles(providers$CartoDB.Positron) %>%
addCircleMarkers(
color = ~pal(pp_total_raw_cat),
radius = ~(as.numeric(ncesenroll)/400),
popup = ~paste0(School,
"<br>Grade Distance from National Average: ", round(diff_from_gradecenter, digits = 3),
"<br>Per Pupil Funding: ", pp_total_raw,
"<br>Enrollment: ", ncesenroll
),
stroke = ~ifelse(!is.na(pp_total_raw_cat), TRUE, FALSE),
group = "Funding"
) %>%
addLegend("bottomright", colors = met.brewer(palname, 4)[1:4], title = "Per Student Funding", labels = c("$10,000 or less", "$10,000 to $15,000", "15,000 to 20,000", "Greater than 20,000"))
