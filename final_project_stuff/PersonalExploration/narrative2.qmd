---
title: "Beyond the Report Card: Investigating the Factors that Define Educational Achievement"
description: ""
author: "Thu Dang, Nathaniel Reimer, Jeremy Hubinger"
date: "2023-05-08"
date-modified: last-modified
format: html
editor: visual
execute: 
  echo: false
  warning: false
  message: false
---

```{r packages}
library(tidyverse)
library(MetBrewer)
library(sf)
library(rnaturalearth)
library(classInt) #install.packages('classInt')
library(ggspatial) #install.packages('ggspatial')
library(ggthemes) #install.packages('ggthemes')
library(RColorBrewer)
library(patchwork)
library(leaflet)
library(probably) #install.packages('probably')
library(glmnet)
library(tidymodels)
tidymodels_prefer()
```

```{r color}
palname = "Homer2"
defaultcolor = met.brewer(palname,10)[9]
```

```{r load datasets}
load("../CombinedDataLongFormat.RData")
load("../WideMergedData.RData")
```



## Comparing Performance Metrics
```{r metric performance and funding}
#| warning: false
#| message: false
min_max_norm <- function(x) {
    (x - min(x, na.rm=TRUE)) / (max(x, na.rm=TRUE) - min(x, na.rm=TRUE))
}

# model metrics by per pupil funding
grouped_merged_table <- merged_table %>%
  filter(flag_nerds == 'false' || is.na(flag_nerds)) %>%
  filter(flag_f33 != '1' || is.na(flag_f33)) %>%
  mutate(pp_total_raw = as.numeric(pp_total_raw))%>%
  filter(pp_total_raw < 100000) %>% #filters 1 school out
  # mutate to then as.numeric
  mutate(
      science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard = as.numeric(science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard),
      science_data_Physical.Sciences.Domain.Percent.Above.Standard = as.numeric(science_data_Physical.Sciences.Domain.Percent.Above.Standard),
      science_data_Life.Sciences.Domain.Percent.Above.Standard = as.numeric(science_data_Life.Sciences.Domain.Percent.Above.Standard),
      ela_data_currstatus = as.numeric(ela_data_currstatus),
      gcs_mn_avg_ol = as.numeric(gcs_mn_avg_ol)
  ) %>%
  mutate(ela_data_currstatus = ela_data_currstatus * ela_data_currdenom) %>%
  group_by(CDSCode, pp_total_raw, Latitude, Longitude) %>%
  summarise(
    science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard = mean(science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard, na.rm = TRUE),
    science_data_Physical.Sciences.Domain.Percent.Above.Standard = mean(science_data_Physical.Sciences.Domain.Percent.Above.Standard, na.rm = TRUE),
    science_data_Life.Sciences.Domain.Percent.Above.Standard = mean(science_data_Life.Sciences.Domain.Percent.Above.Standard, na.rm = TRUE),
    ela_data_currstatus = mean(ela_data_currstatus, na.rm = TRUE),
    gcs_mn_avg_ol = mean(gcs_mn_avg_ol, na.rm = TRUE),
  ) %>%
  ungroup()

graph_ready <- grouped_merged_table %>%
  na.omit() %>% #only looking at the same schools. this line is doing a lot though
  filter(pp_total_raw < 20000) %>% # removes 2 schools
  # normalize the metrics
    mutate(
        science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard = min_max_norm(science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard),
        science_data_Physical.Sciences.Domain.Percent.Above.Standard = min_max_norm(science_data_Physical.Sciences.Domain.Percent.Above.Standard),
        science_data_Life.Sciences.Domain.Percent.Above.Standard = min_max_norm(science_data_Life.Sciences.Domain.Percent.Above.Standard),
        ela_data_currstatus = min_max_norm(ela_data_currstatus),
        gcs_mn_avg_ol = min_max_norm(gcs_mn_avg_ol)
    ) %>%
  group_by(CDSCode) %>%
  pivot_longer(cols=c(science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard,science_data_Physical.Sciences.Domain.Percent.Above.Standard,science_data_Life.Sciences.Domain.Percent.Above.Standard,ela_data_currstatus,gcs_mn_avg_ol))
fl <- c("English Language Arts", "Grade Cohort Standardized", "Earth + Space", "Life Sciences", "Physical Sciences")
names(fl) <- c("ela_data_currstatus", "gcs_mn_avg_ol", "science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard", "science_data_Life.Sciences.Domain.Percent.Above.Standard", "science_data_Physical.Sciences.Domain.Percent.Above.Standard")
graph_ready %>%
  ggplot(aes(x = pp_total_raw, y = value)) +
  geom_point(alpha=0.3,color = defaultcolor)+
  facet_wrap(~name, labeller=labeller(name=fl))+
  geom_smooth(color = defaultcolor)+
  labs(x = "Per Pupil Funding", y = "Normalized Metric", title = "Metric Performance by Total Per-Pupil Funding") +
  theme_minimal() +
  theme(
    legend.title = element_blank(),
    legend.text = element_text(size = 8),
    legend.position = "none")
```

```{r metrics and performance funding part 2}
fl <- c("English Language Arts", "Grade Cohort Standardized", "Earth + Space", "Life Sciences", "Physical Sciences", "Math Growth Score", "English Language Arts Growth Score")
names(fl) <- c("ela_data_currstatus_ALL", "gcs", "science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99", "science_data_Life.Sciences.Domain.Percent.Above.Standard_99", "science_data_Physical.Sciences.Domain.Percent.Above.Standard_99", "growthscore_ela", "growthscore_math")


multi_metric_data<-wide_merged_data %>% 
  mutate(pp_total_raw = as.numeric(pp_total_raw)) %>%
  mutate(science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99 = as.numeric(science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99),
        science_data_Physical.Sciences.Domain.Percent.Above.Standard_99 = as.numeric(science_data_Physical.Sciences.Domain.Percent.Above.Standard_99),
        science_data_Life.Sciences.Domain.Percent.Above.Standard_99 = as.numeric(science_data_Life.Sciences.Domain.Percent.Above.Standard_99),
        ela_data_currstatus_ALL = as.numeric(ela_data_currstatus_ALL),
        gcs_mn_avg_ol = as.numeric(gcs_mn_avg_ol),
        growthscore_ela = as.numeric(growthscore_ela),
        growthscore_math = as.numeric(growthscore_math)
    ) %>% mutate(
        science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99 = min_max_norm(science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99),
        science_data_Physical.Sciences.Domain.Percent.Above.Standard_99 = min_max_norm(science_data_Physical.Sciences.Domain.Percent.Above.Standard_99),
        science_data_Life.Sciences.Domain.Percent.Above.Standard_99 = min_max_norm(science_data_Life.Sciences.Domain.Percent.Above.Standard_99),
        ela_data_currstatus_ALL = min_max_norm(ela_data_currstatus_ALL),
        gcs = min_max_norm(gcs_mn_avg_ol - gradecenter),
        growthscore_ela = min_max_norm(growthscore_ela),
        growthscore_math = min_max_norm(growthscore_math)
    ) %>% pivot_longer(cols = c(science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99, science_data_Physical.Sciences.Domain.Percent.Above.Standard_99, science_data_Life.Sciences.Domain.Percent.Above.Standard_99, ela_data_currstatus_ALL, gcs, growthscore_ela, growthscore_math))

multi_metric_data %>%
  ggplot(aes(x = pp_total_raw, y = value)) +
    geom_point(alpha=0.3,color = defaultcolor)+
    facet_wrap(~name, labeller=labeller(name=fl))+
    geom_smooth(color = defaultcolor)+
    labs(x = "Per Pupil Funding", y = "Normalized Metric", title = "Metric Performance by Total Per-Pupil Funding") +
    theme_minimal() +
    theme(
      legend.title = element_blank(),
      legend.text = element_text(size = 8),
      legend.position = "none") +
    scale_x_continuous(limits = c(8000,20000))
```
## At The County Level 
```{r maps load shapefile}
ca_counties <- read_sf('../CA_Counties')
ca_counties <- ca_counties %>%
  st_transform(crs = "NAD83")
```

```{r gcs map data cleaning}
school_map <- merged_table %>%
  select(CDSCode, School, gradecenter, gcs_mn_avg_ol, Longitude, Latitude) %>%
  filter(!is.na(gradecenter) & !is.na(gcs_mn_avg_ol)) %>% #7390 after NA gradecenter, 6997 after both conditions
  distinct %>%
  mutate(diff_from_gradecenter = gcs_mn_avg_ol - gradecenter) %>%
  mutate(gcs_type = ifelse(diff_from_gradecenter < 0, "Below NAEP Average", ifelse(diff_from_gradecenter > 0, "Above NAEP Average", "At NAEP Average")))

school_map_sf <- school_map %>% 
  st_as_sf(coords = c('Longitude', 'Latitude'), crs = "NAD83")

school_county_sf <- st_join(school_map_sf, ca_counties) 

grade_diff_by_county <- school_county_sf %>%
  st_drop_geometry() %>% #removes geometry - makes calculation more efficient 
  group_by(NAMELSAD) %>%
  summarise(mean_gcs_diff = mean(diff_from_gradecenter))

grade_diff_by_county_geo <- ca_counties %>%
  left_join(grade_diff_by_county, by="NAMELSAD")
```

```{r gcs map}
grade_diff_by_county_with_breaks_geo <- grade_diff_by_county_geo %>%
  mutate(grade_diff_cat = factor(cut(mean_gcs_diff, breaks=c(-2, -1, 0, 1, 2))))

pal <- colorFactor(
  palette = met.brewer(palname,3)[1:3],
  domain = grade_diff_by_county_with_breaks_geo$grade_diff_cat
)

leaflet(grade_diff_by_county_with_breaks_geo) %>%
  addPolygons(
    fillColor = ~pal(grade_diff_cat),
    opacity = .25,
    color = "white",
    fillOpacity = .5,
    group = "County"
  )  %>% 
  addProviderTiles(providers$CartoDB.Positron) %>%
    addLayersControl(
    baseGroups = "County",
    position = "topright"

  ) %>%
  addLegend(colors = met.brewer(palname,3)[1:3], values = ~grade_diff_cat, title = NULL, labels = c('Between 1-2 grades LOWER than national average', 'Within 1 grade LOWER than national average', 'Within 1 grade HIGHER than national average'), className = "info legend County")

```

## At The School Level

```{r funding/performance map}
mapdata <- wide_merged_data %>% filter(!is.na(gradecenter)&!is.na(gcs_mn_avg_ol)) %>% 
  mutate(diff_from_gradecenter = gcs_mn_avg_ol - gradecenter, pp_total_raw = as.numeric(pp_total_raw)) %>%
  mutate(Longitude = as.numeric(Longitude), Latitude = as.numeric(Latitude)) %>%
  mutate(pp_total_raw_cat = cut(pp_total_raw, breaks = c(0,10000,15000,20000,Inf))) %>%
  mutate(diff_from_gradecenter_cat = cut(diff_from_gradecenter, breaks = c(-Inf, -3, -1, 1, 3, Inf)))

p1 <- colorFactor(
  palette = met.brewer(palname, 5)[1:5],
  domain = mapdata$diff_from_gradecenter_cat
)

pal <- colorFactor(
  palette = met.brewer(palname, 4)[1:4],
  domain = mapdata$pp_total_raw_cat
)

leaflet(mapdata) %>% addProviderTiles(providers$CartoDB.Positron) %>% 
  addCircleMarkers(
    color = ~p1(diff_from_gradecenter_cat),
    radius = ~(as.numeric(ncesenroll)/400),
    popup = ~paste0(School, 
                    "<br>Grade Distance from National Average: ", round(diff_from_gradecenter, digits = 3),
                    "<br>Per Pupil Funding: ", pp_total_raw,
                    "<br>Enrollment: ", ncesenroll
    ),
    group = "Performance"
  ) %>% 
  addLegend(position = "bottomright", colors = met.brewer(palname, 5)[1:5], title = "Performance", labels = c("More than 3 years behind", "1-3 years behind",  "within 1 year of national average",  "1-3 years ahead", "more than 3 years ahead"))



leaflet(mapdata) %>% addProviderTiles(providers$CartoDB.Positron) %>% 
  addCircleMarkers(
    color = ~pal(pp_total_raw_cat),
    radius = ~(as.numeric(ncesenroll)/400),
    popup = ~paste0(School, 
                    "<br>Grade Distance from National Average: ", round(diff_from_gradecenter, digits = 3),
                    "<br>Per Pupil Funding: ", pp_total_raw,
                    "<br>Enrollment: ", ncesenroll
    ),
    stroke = ~ifelse(!is.na(pp_total_raw_cat), TRUE, FALSE),
    group = "Funding"
  ) %>%
addLegend("bottomright", colors = met.brewer(palname, 4)[1:4], title = "Per Student Funding", labels = c("$10,000 or less", "$10,000 to $15,000", "15,000 to 20,000", "Greater than 20,000")) 
```

```{r funding and performance by area}
wide_merged_data %>% filter(!is.na(urbanicity)) %>%
  ggplot(aes(x=as.numeric(pp_total_raw), y=(as.numeric(gcs_mn_avg_ol)-as.numeric(gradecenter)))) +
  geom_point(alpha = .1, color=defaultcolor) + 
  geom_smooth(method = lm, color=defaultcolor) + 
  facet_wrap(~urbanicity) + 
  scale_x_continuous(limits = c(8000,18000)) + 
  theme_minimal()+
  labs(y="Grade Cohort Score", x= "Per Student Spending") + guides(color="none") +   geom_hline(yintercept = 0)
```
## Funding and Achievement Correlation

```{r load cleaned dataset for county achievement metrics}
math_ca_gcs_df <- read_csv("../AllDatasets/math_ca_gcs_df.csv")
rla_ca_gcs_df <- read_csv("../AllDatasets/rla_ca_gcs_df.csv")
```
  

```{r funding model}
#| message: true
fundingmod<-wide_merged_data %>% 
  filter(!is.na(pp_total_raw)&!is.na(perfrl)) %>% 
  lm(formula = as.numeric(pp_total_raw) ~ as.numeric(perfrl) + 
       as.numeric(lep_flag) + 
       as.numeric(perfrl)*as.numeric(lep_flag)) %>%
  summary()

lunchfundingmod<-wide_merged_data %>% 
  filter(!is.na(pp_total_raw)&!is.na(perfrl)) %>% 
  lm(formula = as.numeric(pp_total_raw) ~ as.numeric(perfrl)) %>%
  summary()

# fundingmod$coefficients
lunchfundingmod$coefficients
```

```{r adjusted graphs}
fl<-c("Adjusted Spending","Raw Spending")

wide_merged_data %>%
  mutate(pp_total_raw_frl_adjusted = as.numeric(pp_total_raw) - as.numeric(perfrl)*lunchfundingmod$coefficients[2],
  pp_total_raw = as.numeric(pp_total_raw)) %>%
  pivot_longer(cols = c(pp_total_raw_frl_adjusted,pp_total_raw)) %>%
  ggplot(aes(x=value, y=gcs_mn_avg_ol-gradecenter, color = name)) + 
    geom_point(alpha = .1)+
    geom_smooth() +
    geom_hline(yintercept = 0, alpha=.5) + 
    scale_x_continuous(limits = c(8000,18000)) +
    scale_y_continuous(limits = c(-4, 4)) +
    scale_color_discrete(type = met.brewer(palname, 3)[2:3], labels = c("Raw Spending", "Adjusted Spending")) + 
    labs(x = "Per Student Funding", y = "Grade Cohort Score", color="") + 
    theme_minimal() + 
    theme(legend.position = c(.8,.81))

wide_merged_data %>%
  mutate(pp_total_raw_frl_adjusted = as.numeric(pp_total_raw) - as.numeric(perfrl)*lunchfundingmod$coefficients[2],
  pp_total_raw = as.numeric(pp_total_raw)) %>%
  pivot_longer(cols = c(pp_total_raw_frl_adjusted,pp_total_raw)) %>%
 ggplot(aes(x=as.numeric(perhsp),value,color=name)) +
      geom_point(alpha = .05) +
      geom_smooth() + 
      theme_minimal()+
      theme(legend.position = c(.2,.9) ) + 
      labs(x="Percent Hispanic", y="Per student funding", color="")+
      scale_y_continuous(limits = c(5000,20000)) +
      scale_color_discrete(type = met.brewer(palname, 3)[2:3], labels = c("Raw Spending", "Adjusted Spending"))
```

```{r area adjusted graph}
wide_merged_data %>% filter(!is.na(urbanicity)) %>% mutate(pp_total_raw_frl_adjusted = as.numeric(pp_total_raw) - as.numeric(perfrl)*lunchfundingmod$coefficients[2],
  pp_total_raw = as.numeric(pp_total_raw)) %>%
  ggplot(aes(x=as.numeric(pp_total_raw_frl_adjusted), y=(as.numeric(gcs_mn_avg_ol)-as.numeric(gradecenter)))) +
  geom_point(alpha = .1, color=defaultcolor) + 
  geom_smooth(method = lm, color=defaultcolor) + 
  facet_wrap(~urbanicity) + 
  scale_x_continuous(limits = c(8000,18000)) + 
  theme_minimal()+
  labs(y="Grade Cohort Score", x= "Adjusted Per Student Spending") + guides(color="none") +   geom_hline(yintercept = 0)
```

## Something Something GCS Map

```{r data cleaning for ecd and nec leaflet}
summary_math_data <- ca_counties %>%
  left_join(math_ca_gcs_df, by=c("NAMELSAD" = "sedacountyname")) %>%
  filter(student_category %in% c('ecd','nec')) %>%
  filter(!is.na(gcs_value) & !is.na(student_category)) %>%
  select(NAMELSAD, grade, year, gcs_value, student_category, clean_student_category) %>%
  mutate(gcs_diff = gcs_value - grade) %>%
  st_drop_geometry() %>%
  group_by(NAMELSAD, student_category, clean_student_category) %>%
  summarise(mean_gcs_diff = mean(gcs_diff)) %>%
  ungroup()

summary_math_data_with_geo <- ca_counties %>%
  select(NAMELSAD) %>%
  left_join(summary_math_data, by="NAMELSAD")

summary_math_data_with_geo <- summary_math_data_with_geo %>%
  mutate(mean_gcs_diff_cat = factor(cut(mean_gcs_diff, breaks=c(-3, -2, -1, 0, 1, 2, 3))))
```

```{r ecd performance map}
pal <- colorFactor(
  palette = met.brewer(palname,6)[1:6],
  domain = summary_math_data$mean_gcs_diff_cat
)

leaflet() %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
    addLayersControl(
    baseGroups = "County",
    position = "topright"
  ) %>%
  addPolygons(
    data = summary_math_data_with_geo %>% filter(student_category == 'ecd'),
    fillColor = ~pal(mean_gcs_diff_cat),
    opacity = .25,
    color = "white",
    fillOpacity = .5,
    group = "Economically Disadvantaged",
    popup = ~paste0(NAMELSAD, 
                    "<br>Grade Distance from National Average: ", round(mean_gcs_diff, digits = 3)
    )
  )  %>% 
  addPolygons(
    data = summary_math_data_with_geo %>% filter(student_category == 'nec'),
    fillColor = ~pal(mean_gcs_diff_cat),
    opacity = .25,
    color = "white",
    fillOpacity = .5,
    group = "Non-Economically Disadvantaged",
    popup = ~paste0(NAMELSAD, 
                    "<br>Grade Distance from National Average: ", round(mean_gcs_diff, digits = 3)
    )
  )  %>% 
  addLayersControl(baseGroups = c("Economically Disadvantaged", "Non-Economically Disadvantaged"),
                   position = "bottomleft", options = layersControlOptions(collapsed = FALSE)) %>% 
  addLegend(colors = met.brewer(palname,6)[1:6], values = ~mean_gcs_diff_cat, title = NULL, labels = c('Within 2+ grades LOWER than national average','Between 1-2 grades LOWER than national average', 'Within 1 grade LOWER than national average', 'Within 1 grade HIGHER than national average', 'Between 1-2 grades HIGHER than national average', 'Within 2+ grades HIGHER than national average'), group = "Economically Disadvantaged")
```

```{r ecd across metrics}
fl <- c("English Language Arts", "Grade Cohort Standardized", "Earth + Space", "Life Sciences", "Physical Sciences", "Math Growth Score", "English Language Arts Growth Score")
names(fl) <- c("ela_data_currstatus_ALL", "gcs_mn_avg_ol", "science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99", "science_data_Life.Sciences.Domain.Percent.Above.Standard_99", "science_data_Physical.Sciences.Domain.Percent.Above.Standard_99", "growthscore_ela", "growthscore_math")


multi_metric_data %>% 
  mutate(ecdcat = cut(perecd, breaks = c(0,.2,.4,.6,.8,1))) %>%
  group_by(ecdcat, name) %>% 
  mutate(medianvalue = median(value[!is.na(value)])) %>%
  mutate(medianvaluecat = cut(medianvalue, breaks = c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1))) %>%
filter(!is.na(perecd)) %>%
  ggplot(aes(x = cut(perecd, breaks = c(0,.2,.4,.6,.8,1)), y = value, fill = medianvaluecat)) + 
    geom_boxplot(alpha = 1) +
    facet_wrap(~name, labeller=labeller(name=fl)) + 
    labs(x = "Percent Economically Disadvantaged", y = "Normalized Metric") +
    theme_minimal() +
    theme(
      legend.title = element_blank(),
      legend.text = element_text(size = 8),
      legend.position = "none") +
    scale_fill_manual(values = met.brewer(palname,8)[1:8])
    
```

## Choosing Variables

```{r lasso data setup}
data <- wide_merged_data %>% 
  mutate(pp_total_raw = as.numeric(pp_total_raw)) %>%
  mutate(science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99 = as.numeric(science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99),
        science_data_Physical.Sciences.Domain.Percent.Above.Standard_99 = as.numeric(science_data_Physical.Sciences.Domain.Percent.Above.Standard_99),
        science_data_Life.Sciences.Domain.Percent.Above.Standard_99 = as.numeric(science_data_Life.Sciences.Domain.Percent.Above.Standard_99),
        ela_data_currstatus_ALL = as.numeric(ela_data_currstatus_ALL),
        gcs = as.numeric(gcs_mn_avg_ol - gradecenter),
        growthscore_ela = as.numeric(growthscore_ela),
        growthscore_math = as.numeric(growthscore_math)
    ) %>% mutate(
        science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99 = min_max_norm(science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99),
        science_data_Physical.Sciences.Domain.Percent.Above.Standard_99 = min_max_norm(science_data_Physical.Sciences.Domain.Percent.Above.Standard_99),
        science_data_Life.Sciences.Domain.Percent.Above.Standard_99 = min_max_norm(science_data_Life.Sciences.Domain.Percent.Above.Standard_99),
        ela_data_currstatus_ALL = min_max_norm(ela_data_currstatus_ALL),
        gcs = min_max_norm(gcs_mn_avg_ol - gradecenter),
        growthscore_ela = min_max_norm(growthscore_ela),
        growthscore_math = min_max_norm(growthscore_math)
    ) 

# Lasso Model Spec
lm_lasso_spec <- 
  linear_reg() %>%
  set_args(mixture = 1, penalty = 0) %>%
  set_engine(engine = 'glmnet') %>% 
  set_mode('regression') 
```

```{r lasso data split}
outcome <- data %>% select(ela_data_currstatus_ALL, gcs, science_data_Earth.and.Space.Sciences.Domain.Percent.Above.Standard_99, science_data_Life.Sciences.Domain.Percent.Above.Standard_99, science_data_Physical.Sciences.Domain.Percent.Above.Standard_99, growthscore_ela, growthscore_math)

predictors <- ((data %>% select(-starts_with("science_data"), -starts_with("ela_data")))[27:151]) %>% select(-census_id,-DATE_CUR,-CATEGORY,-ST_LEAID,-LEANM,-ST_SCHID,-SCHNAM,-GRADE,STNAM,-FIPST,-LEAID,-reported_which,-reportingyear,-studentgroup,-schoolname.y,       -districtname,-countyname,-EILCode,-EILName,-SOC,-DOC,-YearRoundYN,-FederalDFCDistrictID,-Latitude,-Longitude,-AdmFName,-AdmLName,-AdmEmail,-LastUpDate,-school_id,-         schoolname.x,-ncesdistid_admin,-ncesdistid_geo,-distid_stateassigned,-schoolid_stateassigned,-distname,-address,-city,-state,-zip_code,-level.x,-sedasch,-sedaschname         ,-fips,-stateabb,-subcat,-subgroup,-sedalea,-schnam,-schcity,-type,-level.y,-ncesid,-rtype,-SCHOOL_YEAR,-STNAM,-X) %>%
  select(-contains("growthscore"), -contains("decilerank"), -starts_with("ELA"), -starts_with("MTH"), -charter_flag, -coe_flag, -dass_flag, -enrollmetric_raw, -gcs_mn_avg_ol, -gcs_mn_avg_eb) %>%
  mutate(across(starts_with("pp"), as.numeric)) %>%
  mutate(across(ends_with("raw"), as.numeric)) %>% 
  mutate(ncesenroll = as.numeric(ncesenroll))
```




```{r lasso function}
#| fig-width: 50
#| fig-height: 10
do_lasso<-function(variable, data) {
    
    processeddata <- cbind(variable, data) %>%
      select(where(is.numeric)) %>%
      filter(complete.cases(.))

  
    data_rec <- recipe(variable ~ ., data = processeddata) %>%
      step_nzv(all_predictors()) %>%
      step_novel(all_nominal_predictors()) %>%
      step_normalize(all_numeric_predictors()) %>%
      step_dummy(all_nominal_predictors())
    
    lasso_wf <- workflow() %>%
      add_recipe(data_rec) %>%
      add_model(lm_lasso_spec)
    
    lasso_fit <- lasso_wf %>%
      fit(data = processeddata) # Fit to data
    
    glmnet_output <- lasso_fit %>% extract_fit_parsnip() %>% pluck('fit')
    
    
    lambdas <- glmnet_output$lambda
    coefs_lambdas <- 
      coefficients(glmnet_output, s = lambdas )  %>% 
      as.matrix() %>%  
      t() %>% 
      as.data.frame() %>% 
      mutate(lambda = lambdas ) %>% 
      select(lambda, everything(), -`(Intercept)`) %>% 
      pivot_longer(cols = -lambda, 
                   names_to = "term", 
                   values_to = "coef") %>%
      mutate(var = purrr::map_chr(term,~.[1]))
    
      number <- nrow(processeddata)
      name <- deparse(substitute(variable))
      graph <- coefs_lambdas %>% 
        ggplot(aes(x = lambda, y = coef, group = term, color = var)) +
          labs(subtitle = paste0(name,": ",number)) +
          geom_line() +
          theme_classic() + 
          theme(legend.position = "right", legend.text=element_text(size=8))
          
      graph
}
```

```{r perform lasso}
do_lasso(outcome$ela_data_currstatus_ALL, predictors)
do_lasso(outcome$gcs, predictors)
do_lasso(outcome$growthscore_ela, predictors)
do_lasso(outcome$growthscore_math, predictors)
```

